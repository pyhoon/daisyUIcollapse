AppType=StandardJava
Build1=Default,my.computerise.endsmeet
Build2=Staging,b4j.endsmeet,Staging
File1=config.example
FileGroup1=Default Group
Group=App
Library1=jcore
Library2=jserver
Library3=json
Module1=ApiHandler
Module2=EndsMeetUtils
Module3=HelloController
Module4=HelloModel
Module5=HelloView
Module6=IndexView
Module7=WebHandler
NumberOfFiles=1
NumberOfLibraries=3
NumberOfModules=7
Version=10
@EndOfDesignText@
' Name: 			EndsMeet Framework
' Author:			Aeric Poon
' Version: 			Beta
' ConfigureServer: 	ide://goto?Module=Main&Sub=ConfigureServer
' Objects folder: 	ide://run?file=%WINDIR%\SysWOW64\explorer.exe&Args=%PROJECT%\Objects

#If RELEASE
'#CustomBuildAction: After Packager, %WINDIR%\System32\robocopy.exe, www temp\build\bin\www /E
'#CustomBuildAction: After Packager, %WINDIR%\System32\robocopy.exe, templates temp\build\bin\templates /E
#End If

#Region Project Attributes 
	#CommandLineArgs:
	#MergeLibraries: True
#End Region

Sub Process_Globals
	Public const VERSION 			As String = "0.06"
	Public srvr 					As Server
	Public Config 					As Map
	Public Controllers 				As List
	Public BaseElements 			As BaseElements
	Public SimpleResponse 			As SimpleResponse
	Public ROOT_URL 				As String
	Public ROOT_PATH 				As String
	Public API_PATH 				As String
	Public API_NAME 				As String
	Public API_VERSIONING 			As Boolean
	Public SERVER_PORT 				As Int
End Sub

' <link>Open in browser|http://127.0.0.1:8080/demo</link>
Sub AppStart (Args() As String)
	#If Staging
	' Use this area to generate template and script files
	#Else
	srvr.Initialize("")		' Create the server
	ReadConfig				' Read environment settings
	ConfigureServer			' Configure the server
	srvr.Start				' Start the server

	If BaseElements.Api.IsInitialized Then
		SimpleResponse.Enable = True
		SimpleResponse.Format = "Auto"
	End If

	Log($"EndsMeet Server (version = ${VERSION}) is running on port ${srvr.Port}${IIf(srvr.SslPort > 0, $" (redirected to port ${srvr.SslPort})"$, "")}"$)
	Log($"Open the following URL from your web browser"$)
	Log(ROOT_URL & ROOT_PATH)

	StartMessageLoop
	#End If
End Sub

Private Sub ReadConfig 'ignore
	If Not(File.Exists(File.DirApp, "config.ini")) Then
		File.Copy(File.DirAssets, "config.example", File.DirApp, "config.ini")
	End If
	Config = srvr.CreateThreadSafeMap
	Config = EndsMeetUtils.ReadMapFile(File.DirApp, "config.ini")
	Config.Put("VERSION", VERSION)
End Sub

Private Sub ConfigureServer 'ignore
	ConfigurePort								' Server Port
	ConfigurePaths								' App URL and Paths
	ConfigureElements							' Pretty URL structures
	ConfigureHandlers							' Server Handlers
	ConfigureStaticFiles						' Disable Permission for Browsing Static Files Folder
	Controllers.Initialize
	Controllers.Add("HelloController")
End Sub

Private Sub ConfigurePort
	SERVER_PORT = Config.Get("ServerPort")
	If SERVER_PORT > 0 Then
		srvr.Port = SERVER_PORT
	Else
		SERVER_PORT = srvr.Port
		'Log($"Server Port is set to ${SERVER_PORT}"$)
	End If
End Sub

Private Sub ConfigurePaths
	' Root URL
	ROOT_URL = Config.Get("ROOT_URL")
	Config.Put("ROOT_URL_ORIGINAL", ROOT_URL)
	If SERVER_PORT <> 80 Then
		ROOT_URL = ROOT_URL & ":" & SERVER_PORT
	End If
	Config.Put("ROOT_URL", ROOT_URL)
	
	' Root Path
	ROOT_PATH = Config.Get("ROOT_PATH")
	If ROOT_PATH = "" Then ROOT_PATH = "/"
	If ROOT_PATH <> "/" Then
		If ROOT_PATH.StartsWith("/") = False Then ROOT_PATH = "/" & ROOT_PATH
		If ROOT_PATH.EndsWith("/") = False Then ROOT_PATH = ROOT_PATH & "/"
	End If
	Config.Put("ROOT_PATH", ROOT_PATH)
	
	' API Name
	API_NAME = Config.Get("API_NAME")
	API_NAME = API_NAME.Replace("/", "")
	
	' API Path
	API_PATH = IIf(API_NAME.Length > 0, API_NAME & "/", "")
	
	' API Versioning
	API_VERSIONING = IIf(Config.Get("API_VERSIONING").As(String).EqualsIgnoreCase("True"), True, False)
End Sub

Private Sub ConfigureElements
	BaseElements.Initialize
	BaseElements.Root.Initialize
	BaseElements.Root.Index = 0
	BaseElements.Root.Name = "Root"
	BaseElements.Root.Element = ROOT_URL
	
	BaseElements.Path.Initialize
	BaseElements.Path.Index = 1
	BaseElements.Path.Name = "Path"
	BaseElements.Path.Element = ROOT_PATH.Replace("/", "")
	
	If Not(API_NAME.EqualsIgnoreCase("")) Then
		BaseElements.Api.Initialize
		BaseElements.Api.Index = BaseElements.Path.Index + 1
		BaseElements.Api.Name = "Api"
		BaseElements.Api.Element = API_NAME
		BaseElements.Api.Controller.Initialize
		BaseElements.Api.Versioning = API_VERSIONING
		BaseElements.Api.Controller.Index = BaseElements.Api.Index + 1 + IIf(API_VERSIONING, 1, 0)
		BaseElements.Api.Controller.Name = "ApiController"
	End If
	
	BaseElements.Web.Initialize
	BaseElements.Web.Index = 1 ' BaseElements.Path.Index + 1
	BaseElements.Web.Name = "Web"
	BaseElements.Web.Element = ROOT_PATH.Replace("/", "")
	BaseElements.Web.Controller.Initialize
	BaseElements.Web.Controller.Index = BaseElements.Web.Index + 1
	BaseElements.Web.Controller.Name = "WebController"
End Sub

' Configure this after ConfigureElements
Private Sub ConfigureHandlers
	If API_NAME.EqualsIgnoreCase("") Then
		'srvr.AddHandler(ROOT_PATH & "*", "ApiHandler", False) 					' Add API handler (WebHandler disabled)
		srvr.AddHandler(ROOT_PATH & "*", "WebHandler", False) 					' Add Web handler (ApiHandler disabled)
	Else	
		srvr.AddHandler(ROOT_PATH & API_PATH & "*", "ApiHandler", False) 		' Add API handler
		srvr.AddHandler(ROOT_PATH & "*", "WebHandler", False) 					' Add Web handler
	End If
	'srvr.AddHandler(ROOT_PATH & "help", "HelpHandler", False) 					' Add Help handler
End Sub

Private Sub ConfigureStaticFiles 'ignore
	srvr.StaticFilesFolder = File.Combine(File.DirApp, "www")
	srvr.SetStaticFilesOptions(CreateMap("dirAllowed": False))
End Sub